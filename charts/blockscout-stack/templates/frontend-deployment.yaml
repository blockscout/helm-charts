{{- if .Values.frontend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "blockscout-stack.fullname" . }}-frontend
  annotations: 
    {{- toYaml .Values.frontend.annotations | nindent 4 }}
  labels:
    app: {{ include "blockscout-stack.fullname" . }}-frontend
    {{- include "blockscout-stack.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "blockscout-stack.fullname" . }}-frontend
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/frontend-secret.yaml") . | sha256sum }}
      {{- with .Values.frontend.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if eq .Values.frontend.image.pullPolicy "Always" }}
        releaseTime: {{ dateInZone "2006-01-02 15:04:05Z" (now) "UTC"| quote }}
      {{- end }}
      labels:
        app: {{ include "blockscout-stack.fullname" . }}-frontend
        {{- include "blockscout-stack.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "blockscout-stack.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.frontend.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-frontend
          securityContext:
            {{- toYaml .Values.frontend.securityContext | nindent 12 }}
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
          resources:
            {{- toYaml .Values.frontend.resources | nindent 12 }}
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
          - name: NEXT_PUBLIC_NETWORK_ID
            value: {{ .Values.config.network.id | quote }}
          - name: NEXT_PUBLIC_NETWORK_NAME
            value: {{ .Values.config.network.name | quote }}
          - name: NEXT_PUBLIC_NETWORK_SHORT_NAME
            value: {{ .Values.config.network.shortname | quote }}
          - name: NEXT_PUBLIC_NETWORK_CURRENCY_NAME
            value: {{ .Values.config.network.currency.name | quote }}
          {{- if and .Values.config.network.currency.symbol (not .Values.config.network.currency.dualToken) }}
          - name: NEXT_PUBLIC_NETWORK_CURRENCY_SYMBOL
            value: {{ .Values.config.network.currency.symbol | quote }}
          {{- end }}
          - name: NEXT_PUBLIC_NETWORK_CURRENCY_DECIMALS
            value: {{ .Values.config.network.currency.decimals | quote }}
          {{- if .Values.config.account.enabled }}
          - name: NEXT_PUBLIC_IS_ACCOUNT_SUPPORTED
            value: "true"
          {{- end }}
          {{- if .Values.config.testnet }}
          - name: NEXT_PUBLIC_IS_TESTNET
            value: "true"
          {{- end }}
          {{- if .Values.blockscout.ingress.enabled }}
          - name: NEXT_PUBLIC_API_HOST
            value: {{ .Values.blockscout.ingress.hostname | quote }}
          {{- end }}
          {{- if .Values.frontend.ingress.enabled }}
          - name: NEXT_PUBLIC_APP_HOST
            value: {{ .Values.frontend.ingress.hostname | quote }}
          {{- end }}
          {{- if and .Values.stats.ingress.enabled .Values.stats.enabled }}
          - name: NEXT_PUBLIC_STATS_API_HOST
            value: "https://{{ .Values.stats.ingress.hostname }}"
          {{- end }}
          {{- if .Values.config.prometheus.enabled }}
          - name: PROMETHEUS_METRICS_ENABLED
            value: "true"
          {{- end }}
          {{- if .Values.config.nameService.enabled }}
          - name: NEXT_PUBLIC_NAME_SERVICE_API_HOST
            value: {{ .Values.config.nameService.url }}
          {{- end }}
          {{- if .Values.userOpsIndexer.enabled }}
          - name: NEXT_PUBLIC_HAS_USER_OPS
            value: 'true'
          {{- end }}
          {{- range $key, $value := .Values.frontend.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          {{- range .Values.frontend.extraEnv }}
          - {{ toYaml . | nindent 12 | trim }}
          {{- end }}
          {{- if or .Values.frontend.envFromSecret .Values.frontend.envFrom }}
          envFrom:
          {{- if .Values.frontend.envFromSecret }}
          - secretRef:
              name: {{ include "blockscout-stack.fullname" . }}-frontend-env
          {{- end }}
          {{- range .Values.frontend.envFrom }}
          - {{ toYaml . | nindent 12 | trim }}
          {{- end }}
          {{- end }}
          {{- if .Values.frontend.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.frontend.readinessProbe.path }}
              port: http
              scheme: HTTP
            {{- with .Values.frontend.readinessProbe.params }}
            {{- . | toYaml | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if .Values.frontend.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.frontend.livenessProbe.path }}
              port: http
              scheme: HTTP
            {{- with .Values.frontend.livenessProbe.params }}
            {{- . | toYaml | nindent 12 }}
            {{- end }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}