{{- if .Values.frontend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "autoscout.fullname" . }}-frontend
  labels:
    app: {{ include "autoscout.fullname" . }}-frontend
    {{- include "autoscout.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "autoscout.fullname" . }}-frontend
      {{- include "autoscout.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- if eq .Values.frontend.image.pullPolicy "Always" }}
        rollme: {{ randAlphaNum 5 | quote }}
      {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ include "autoscout.fullname" . }}-frontend
        {{- include "autoscout.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "autoscout.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.frontend.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-frontend
          securityContext:
            {{- toYaml .Values.frontend.securityContext | nindent 12 }}
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          env:
            {{- with (first .Values.ingress.hosts) }}
            - name: NEXT_PUBLIC_API_ORIGIN
              value: https://{{ .host }}
            {{- end }}
            - name: NEXT_PUBLIC_AUTH0_DOMAIN
              value: {{ .Values.config.auth0.domain | quote }}
            - name: NEXT_PUBLIC_AUTH0_AUDIENCE
              value: {{ .Values.config.auth0.audience | quote }}
            - name: NEXT_PUBLIC_AUTH0_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-auth0" (include "autoscout.fullname" .) }}
                  key: "client_id"
            - name: AUTH0_MANAGEMENT_API_AUDIENCE
              value: {{ .Values.config.auth0.management.audience | quote }}
            - name: AUTH0_MANAGEMENT_API_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-auth0" (include "autoscout.fullname" .) }}
                  key: "management_client_id"
            - name: AUTH0_MANAGEMENT_API_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-auth0" (include "autoscout.fullname" .) }}
                  key: "management_secret"
            {{- range $key, $value := .Values.frontend.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- if .Values.frontend.envFromSecret }}
          envFrom:
            - secretRef:
                name: {{ include "autoscout.fullname" . }}-frontend-env
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.frontend.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.frontend.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.frontend.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.frontend.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}