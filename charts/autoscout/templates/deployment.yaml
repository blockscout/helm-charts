apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "autoscout.fullname" . }}
  labels:
    app: {{ include "autoscout.fullname" . }}
    {{- include "autoscout.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "autoscout.fullname" . }}
      {{- include "autoscout.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- if eq .Values.image.pullPolicy "Always" }}
        rollme: {{ randAlphaNum 5 | quote }}
      {{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ include "autoscout.fullname" . }}
        {{- include "autoscout.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "autoscout.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
              {{- if .Values.config.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.config.metrics.port }}
              protocol: TCP
              {{- end }}
          env:
            - name: AUTOSCOUT__SERVER__HTTP__ADDR
              value: "0.0.0.0:8050"
            - name: AUTOSCOUT__DATABASE__CONNECT__KV__HOST
              value: {{ .Values.config.database.host | quote }}
            - name: AUTOSCOUT__DATABASE__CONNECT__KV__PORT
              value: {{ .Values.config.database.port | quote }}
            - name: AUTOSCOUT__DATABASE__CONNECT__KV__USER
              valueFrom:
                secretKeyRef:
                  name: {{ or .Values.config.database.existingSecret (printf "%s-database" (include "autoscout.fullname" .)) }}
                  key: {{ or .Values.config.database.existingSecretUsernameKey "username" }}
            - name: AUTOSCOUT__DATABASE__CONNECT__KV__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ or .Values.config.database.existingSecret (printf "%s-database" (include "autoscout.fullname" .)) }}
                  key: {{ or .Values.config.database.existingSecretPasswordKey "password" }}
            - name: AUTOSCOUT__DATABASE__CONNECT__KV__DBNAME
              value: {{ .Values.config.database.dbname | quote }}
            {{- if .Values.config.metrics.enabled }}
            - name: AUTOSCOUT__METRICS__ENABLED
              value: 'true'
            - name: AUTOSCOUT__METRICS__ADDR
              value: 0.0.0.0:{{ .Values.config.metrics.port }}
            {{- end }}
            - name: AUTOSCOUT__GITHUB__TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-github" (include "autoscout.fullname" .) }}
                  key: "token"
            - name: AUTOSCOUT__COINBASE__API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-coinbase" (include "autoscout.fullname" .) }}
                  key: "api_key"
            - name: AUTOSCOUT__COINBASE__WEBHOOK__SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-coinbase" (include "autoscout.fullname" .) }}
                  key: "webhook_secret"
            - name: AUTOSCOUT__GITHUB__OWNER
              value: {{ .Values.config.github.owner | quote }}
            - name: AUTOSCOUT__GITHUB__REPO
              value: {{ .Values.config.github.repo | quote }}
            - name: AUTOSCOUT__GITHUB__BRANCH
              value: {{ .Values.config.github.branch | quote }}
            - name: AUTOSCOUT__TRACING__FORMAT
              value: "json"
            - name: AUTOSCOUT__DATABASE__RUN_MIGRATIONS
              value: "true"
            - name: RUST_LOG
              value: {{ .Values.config.logLevel | quote }}
            - name: AUTOSCOUT__LOKI__HOST
              value: {{ .Values.config.logLokiHost | quote }}
            - name: AUTOSCOUT__NOTIFY__SENDGRID__API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-sendgrid" (include "autoscout.fullname" .) }}
                  key: "api_key"
            {{- range $key, $value := .Values.config.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- if .Values.config.envFromSecret }}
          envFrom:
            - secretRef:
                name: {{ include "autoscout.fullname" . }}-env
          {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          startupProbe:
            {{- toYaml .Values.startupProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
